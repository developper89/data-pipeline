name: connector_manager
networks:
  preservarium_net:
    external: true
#     name: preservarium_net
#     driver: bridge

services:
  manager:
    container_name: manager
    build:
      context: .
      dockerfile: manager/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Allow Docker-in-Docker
      - ./manager:/app/manager
      - ./shared:/app/shared
    environment:
      - CONFIG_PATH=/app/manager/connectors_config.yaml
      - HOST_SHARED_PATH=${PWD}/shared  # Absolute path to shared directory on host
    networks:
      - preservarium_net
    depends_on:
      - kafka
  
  normalizer:
    container_name: normalizer
    build:
      context: .
      dockerfile: normalizer/Dockerfile
    volumes:
      - ./normalizer:/app/normalizer
      - ./shared:/app/shared
      - ./storage:/app/storage
    environment:
      # Python Path
      # Kafka Configuration
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_RAW_DATA_TOPIC=iot_raw_data
      - KAFKA_VALIDATED_DATA_TOPIC=iot_validated_data
      - KAFKA_ERROR_TOPIC=iot_errors
      - KAFKA_CONSUMER_GROUP_ID=normalizer_group
      - KAFKA_CONSUMER_POLL_TIMEOUT_S=1.0
      # Database Configuration
      - DATABASE_URL=postgresql://postgres:preservarium@postgres:5432/preservarium
      # Script Storage Configuration
      - SCRIPT_STORAGE_TYPE=local
      - LOCAL_SCRIPT_DIR=/app/storage/parser_scripts
      # Service Configuration
      - LOG_LEVEL=INFO
    networks:
      - preservarium_net
    depends_on:
      - kafka

  ingestor:
    container_name: ingestor
    build:
      context: .
      dockerfile: ingestor/Dockerfile
    volumes:
      - ./ingestor:/app/ingestor
      - ./shared:/app/shared
    environment:
      # Kafka Configuration
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_VALIDATED_DATA_TOPIC=iot_validated_data
      - KAFKA_ERROR_TOPIC=iot_errors
      - KAFKA_CONSUMER_GROUP_ID=ingestor_group
      - KAFKA_CONSUMER_POLL_TIMEOUT_S=1.0
      # InfluxDB Configuration
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-preservarium-token}
      - INFLUXDB_ORG=preservarium
      - INFLUXDB_BUCKET=iot_data
      - INFLUXDB_BATCH_SIZE=100
      - INFLUXDB_FLUSH_INTERVAL_MS=5000
      - INFLUXDB_TIMESTAMP_PRECISION=s
      # Service Configuration
      - LOG_LEVEL=INFO
    networks:
      - preservarium_net
    depends_on:
      - kafka
      - influxdb

  influxdb:
    image: influxdb:2.6
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=preservarium
      - DOCKER_INFLUXDB_INIT_ORG=preservarium
      - DOCKER_INFLUXDB_INIT_BUCKET=iot_data
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN:-preservarium-token}
    networks:
      - preservarium_net

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    networks:
      - preservarium_net
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      # Update listeners to use the service name for internal network communication
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093,EXTERNAL://localhost:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # Other Kafka configurations
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "29092:29092"  # External access port

volumes:
  influxdb-data: 