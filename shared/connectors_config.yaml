connectors:
  - connector_id: "coap-connector"
    image: "coap-connector:latest"
    protocol: "coap"
    translators:
      - type: "protobuf"
        config:
          manufacturer: "efento"
          parser_script_path: "c1d71d91c08e409ebceec1ea54023d9b.py"
          path_mapping:
            "i": "device_info"
            "m": "measurements"
            "c": "config"
          device_id_extraction:
            sources:
              - message_type: "measurements"
                field_path: "serial_num"
                action: "parse"
                priority: 2
              - message_type: "device_info"
                field_path: "serial_num"
                action: "parse"
                priority: 1
              - message_type: "config"
                field_path: "serial_number"
                action: "parse"
                priority: 3
            validation:
              regex: "^[a-fA-F0-9]{8,64}$"
              normalize: true
          commands:
            sources:
              - command_type: "alarm"
                message_type: "config"
                priority: 1
              - command_type: "config"
                message_type: "config"
                priority: 1
              - command_type: "refresh_config"
                message_type: "config"
                templating:
                  type: "button"
                  display_name: ""
                  class: "p-button-secondary"
                  tooltip: "Demander la configuration actuelle"
                  icon: "pi pi-history"
                priority: 1
            validation:
              supported_commands:
                ["alarm", "config", "refresh_config", "device_info_request"]
          message_types:
            measurements:
              proto_class: "ProtoMeasurements"
              proto_module: "proto_measurements_pb2"
              required_fields: ["serial_num"]
            device_info:
              proto_class: "ProtoDeviceInfo"
              proto_module: "proto_device_info_pb2"
              required_fields: ["serial_num"]
            config:
              proto_class: "ProtoConfig"
              proto_module: "proto_config_pb2"
              required_fields: ["serial_number"]
        priority: 1
    env:
      COAP_HOST: "0.0.0.0"
      COAP_PORT: "5683"
      EXPOSE_PORT: ["5683/udp"]
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_RAW_DATA_TOPIC: "iot_raw_data"
      KAFKA_ERROR_TOPIC: "iot_errors"
      KAFKA_DEVICE_COMMANDS_TOPIC: "device_commands"
      COAP_BASE_DATA_PATH: ""
      LOG_LEVEL: "DEBUG"

  - connector_id: "mqtt-connector"
    image: "mqtt-connector:latest"
    protocol: "mqtt"
    translators:
      - type: "proprietary"
        config:
          manufacturer: "mafabrique"
          parser_script_path: "681562fd385445ce9d842e1ad824f589.py"
          device_id_extraction:
            sources:
              # Handle 3-level topic structure: broker_data/{building_id}/{device_id}/data
              - type: "path_pattern"
                pattern: "broker_data/+/{device_id}/data"
                device_type: "sensor"
                action: "parse"
                priority: 1
                validation:
                  min_length: 3
                  max_length: 50
                  pattern: "^[a-fA-F0-9]+$"

              # Handle feedback topic structure: broker_data/{device_id}/feedback
              - type: "path_pattern"
                pattern: "broker_data/{device_id}/feedback"
                device_type: "broker"
                action: "parse_feedback"
                priority: 2
                validation:
                  min_length: 3
                  max_length: 50
                  pattern: "^[a-fA-F0-9]+$"

              # Handle 2-level topic structure: broker_data/{device_id}/data (legacy support)
              # - type: "path_pattern"
              #   pattern: "broker_data/{device_id}/data"
              #   priority: 2
              #   validation:
              #     min_length: 3
              #     max_length: 50
              #     pattern: "^[a-fA-F0-9]+$"
              # - type: "json_payload"
              #   json_path: "$.device.id"
              #   fallback_paths: ["$.deviceId", "$.id", "$.device_id"]
              #   priority: 4
              #   validation:
              #     min_length: 3
              #     max_length: 50
          commands:
            sources:
              - command_type: "config"
                format_type: "json"
                topic_pattern: "broker_data/{device_id}/command"
                templating:
                  type: "internal"
                priority: 1
              - command_type: "reboot"
                format_type: "json"
                topic_pattern: "broker_data/{device_id}/command"
                templating:
                  type: "button"
                  display_name: ""
                  tooltip: "Redémarrer"
                  class: "p-button-secondary"
                  icon: "pi pi-power-off"
                priority: 1
              - command_type: "synchronize"
                format_type: "json"
                topic_pattern: "broker_data/{device_id}/command"
                templating:
                  type: "button"
                  display_name: ""
                  class: "p-button-secondary"
                  tooltip: "Synchroniser le temps"
                  icon: "pi pi-history"
                priority: 1
            validation:
              supported_commands: ["config", "reboot", "synchronize"]
      - type: "proprietary"
        config:
          manufacturer: "mafabrique"
          parser_script_path: "light_controller_parser.py"
          device_id_extraction:
            sources:
              # Light controllers use scheduler_data topic pattern
              - type: "path_pattern"
                pattern: "broker_data/+/{device_id}/scheduler_data"
                device_type: "light_controller"
                action: "parse"
                priority: 1
                validation:
                  min_length: 3
                  max_length: 50
                  pattern: "^[a-fA-F0-9]+$"
          commands:
            sources:
              # Light-specific commands
              - command_type: "light_control"
                templating:
                  type: "component"
                  component: "LightControlCard.mafabrique" # Will resolve to LightControlCard.mafabrique
                  placement: "overview"

              - command_type: "light_read_all"
                format_type: "binary"
                topic_pattern: "broker_data/{device_id}/command"
                templating:
                  type: "button"
                  display_name: "Rafraîchir"
                  class: "p-button-primary"
                  tooltip: "Lire toutes les tâches programmées"
                  icon: "pi pi-refresh"
                priority: 1

              - command_type: "light_read_single"
                format_type: "binary"
                topic_pattern: "broker_data/{device_id}/command"
                templating:
                  type: "button"
                  display_name: "Rafraîchir"
                  class: "p-button-primary"
                  tooltip: "Lire la tâche programmée"
                  icon: "pi pi-refresh"
                priority: 1

              - command_type: "light_config_task"
                topic_pattern: "broker_data/{device_id}/command"
                templating:
                  type: "button"
                  display_name: ""
                  class: "p-button-secondary"
                  tooltip: "Configurer"
                  icon: "pi pi-cog"
                priority: 1

              - command_type: "light_delete_task"
                format_type: "binary"
                topic_pattern: "broker_data/{device_id}/command"
                templating:
                  type: "internal"
                priority: 1

              - command_type: "light_delete_all"
                format_type: "binary"
                topic_pattern: "broker_data/{device_id}/command"
                templating:
                  type: "button"
                  display_name: "Supprimer Tout"
                  class: "p-button-danger"
                  tooltip: "Supprimer toutes les tâches"
                  icon: "pi pi-trash"
                priority: 1
          validation:
            supported_commands:
              - "light_read_all"
              - "light_read_single"
              - "light_config_task"
              - "light_delete_task"
              - "light_delete_all"
        priority: 2
    env:
      BROKER_HOST: "preservarium.fr"
      BROKER_PORT: "8883"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_RAW_DATA_TOPIC: "iot_raw_data"
      KAFKA_ERROR_TOPIC: "iot_errors"
      KAFKA_DEVICE_COMMANDS_TOPIC: "device_commands"
      MQTT_TOPICS: "broker_data/+/+/data,broker_data/+/feedback,broker_data/+/+/scheduler_data"
      USE_TLS: "true"
      MQTT_USERNAME: "root"
      MQTT_PASSWORD: "root"
      LOG_LEVEL: "INFO"
      CA_CERT_CONTENT: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUYwekNDQTd1Z0F3SUJBZ0lVVU5nNzRuOEdwODVOd1dQbTc2QVBrRW1uRzdjd0RRWUpLb1pJaHZjTkFRRU4KQlFBd2VURWpNQ0VHQTFVRUF3d2FRMjl1WTJWdWRISmhkR1YxY2lCUWNtVnpaWEoyWVhKcGRXMHhGVEFUQmdOVgpCQW9NREZCeVpYTmxjblpoY21sMWJURVZNQk1HQTFVRUN3d01VSEpsYzJWeWRtRnlhWFZ0TVNRd0lnWUpLb1pJCmh2Y05BUWtCRmhWamIyNTBZV04wUUcxaFptRmljbWx4ZFdVdVpuSXdIaGNOTWpFd09UQTNNVFkxTnpFeldoY04KTkRFd09UQXlNVFkxTnpFeldqQjVNU013SVFZRFZRUUREQnBEYjI1alpXNTBjbUYwWlhWeUlGQnlaWE5sY25aaApjbWwxYlRFVk1CTUdBMVVFQ2d3TVVISmxjMlZ5ZG1GeWFYVnRNUlV3RXdZRFZRUUxEQXhRY21WelpYSjJZWEpwCmRXMHhKREFpQmdrcWhraUc5dzBCQ1FFV0ZXTnZiblJoWTNSQWJXRm1ZV0p5YVhGMVpTNW1jakNDQWlJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBSzM4OWZJS2ZMNUEyVll1aEFsRU4zc0RBRXE5cnlrbAoyMzF1NDlUM3BvQUxVa1doRFFLbzRrQUpyd1FaNElUSVl2RFhFTTRKaFhGT2FUS2NlS05lQndTWWN3cTlWMGNaCkpZVm9NMzBSb0FpOWtmS3pra1hXOEY3WS9PUW50dGJRd3JrMU52TDVJQ2txa3hFTEhwYVU0OE9uR2hTTDQ3SWMKMVF3cW96Qy9qNUFDRkVybUNQS2tYUGg0MmRPZmV3NEFGRnVhNDExdVRrMzkrQWFsOE1SMmJoODBFRUNHUUd4WgpaaTBoV01xQldQbUZkd3NSWnhvRDM0MEJVaUNqYk9MR05OazlSdTlQVXVNWFZGOTZjV2xicFR5Tll2NHVhM05BCnArdWZnc0V2T2p0MlJDd3ZtWWpTSlVRbjQ2ZEcxMzZvdUlMQ0JxYkJ3K243VHBLUWwyMkNSd3lVTkpwcjZoQ2MKazFBenFHMHczWXNlYW5pV2dpRDZRdEpHODdwV1I4SWlZaGViejgvRVNzZVpLRks1NHpaeXIyUTVLaTdMcStqVApiK0pNVVNRYkRWY3hzbEhuNElvMnpLbHBoSEN1bnFlZk1hM0ZqZlVJWVUzQkpkZW8xYStsSjUyWWdocExrRE1PCkJVM2FkYzhvR0ZwT25vWHZBWm10QnFVdFNDSmFnTllLbGpYa0ZEMFlyUTZjVW5UTlVuR3UxaWF1bUxUdmdUNmQKSXlhcW9RLzNDOE13b3A4MU0vQXZVbFpQZk8zdUNIMHlObFBRWCtGSjVOOU5ubVBnekVKcGs0REY1bXNLajU2SgpyYzIxVGRsS2xnanV6dVFMRVQ1QzZMNXNseTVPM0xlRnBjTE9FVVF5Um9zRzJocXhxTzMrTENrZ21WK1BNSTF2CjRPMnVUai9BeU54VEFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCUVE0VHE5YnQxdEtaa0VsNWs1OHVIOXkyUTYKY0RBZkJnTlZIU01FR0RBV2dCUVE0VHE5YnQxdEtaa0VsNWs1OHVIOXkyUTZjREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUEwR0NTcUdTSWIzRFFFQkRRVUFBNElDQVFBN3hqR2E5WSszQjRMdTJZTnhlZWRTTXVUQzQ4OVVrakJFClFSekhQVU5VQm1iSy9oeXpEWEdmNFVwS0ZqNnlvR3FLRzV2M05sQnhONFpRbCtJbU9HUWZmQnRBUWI5RkFxcU8KSlN5T2NEanpNWEtVZlFRd2NWRzJQdC9jakFTNGU1MCtxQ2pGM2RWVjgwemdOb1dONkVmVHcralFtZlh2QWxsSwozczI4QmpzNjIvbTd4MlVqb2RxTU12MHhaQ25VanI3bjZGK2R2NzNlZXNZUVFyckRldlVrUkIraW1Ib3ROUGJECmJhcDhIbHd2MnIvbnJaTUYzd0tOQW1iV2NsWG1UOUtRcVdLc0Y0Z2o2TFgySnF1cmg0QUo3M3VxZnpmK1hFd1EKOXBoMG5TUWdxUlp6STNXSGV4b3hUZVFGaWpxaFpFQlRKSWhQdUpEcEtBWnU0b3Y2TG5UODVMRzlsNG9DVzR1VAp2U0tUeFl6L1F6ZUpIeFRqcUZzQzRYNmVydlhSazRnWUlUNU14YVdJcnFUZHhWVHA4RGNKNmFISHU4dUZWSmNLClpDYzZDNDB4d1JrUGxzd2dJSjBaT0dzTjFkZXplUG1STG5PQ2ZLanF0Nml2c3E3VTZiNjFFUktMUDV6cnkrUDYKVnJQRVR5U2tpc2Y0TTRMU3BOTzBocFQ2cmx3QzExUFM2MW9QWHh0Z0I0TDE3Mm41OXpJYWovUkswL05SV0hNQwpYVWlkaFlnUjNrVEVXc1BlcmJHY0xObHJXc1FrVWNmVVNnOWwvZVRTNU9JdytRbjFOcWkva1piOFpZcTZCUzhzCjlIbjlUYnA3a05yWkdnb1lkcUpTb2JxOWw1OEtDN0RoTVYwa1I2OTY4UHFKWHBHSDdqSlF4eWtRWitROW82S3MKUXdkdFYrSEhKUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"

  # - connector_id: "broker_preservarium"
  #   image: "mqtt-connector:latest"
  #   env:
  #     BROKER_HOST: "preservarium.fr"
  #     BROKER_PORT: "8883"
  #     KAFKA_BOOTSTRAP: "kafka:9092"
  #     KAFKA_TOPIC: "topic1"
  #     MQTT_TOPICS: "sensors/#,devices/#"
  #     CONNECTOR_SCRIPT_PATH: "/app/mqtt_connector/main.py"
  #     USE_TLS: "true"
  #     MQTT_USERNAME: "root"
  #     MQTT_PASSWORD: "root"
  #     CA_CERT_CONTENT: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUYwekNDQTd1Z0F3SUJBZ0lVVU5nNzRuOEdwODVOd1dQbTc2QVBrRW1uRzdjd0RRWUpLb1pJaHZjTkFRRU4KQlFBd2VURWpNQ0VHQTFVRUF3d2FRMjl1WTJWdWRISmhkR1YxY2lCUWNtVnpaWEoyWVhKcGRXMHhGVEFUQmdOVgpCQW9NREZCeVpYTmxjblpoY21sMWJURVZNQk1HQTFVRUN3d01VSEpsYzJWeWRtRnlhWFZ0TVNRd0lnWUpLb1pJCmh2Y05BUWtCRmhWamIyNTBZV04wUUcxaFptRmljbWx4ZFdVdVpuSXdIaGNOTWpFd09UQTNNVFkxTnpFeldoY04KTkRFd09UQXlNVFkxTnpFeldqQjVNU013SVFZRFZRUUREQnBEYjI1alpXNTBjbUYwWlhWeUlGQnlaWE5sY25aaApjbWwxYlRFVk1CTUdBMVVFQ2d3TVVISmxjMlZ5ZG1GeWFYVnRNUlV3RXdZRFZRUUxEQXhRY21WelpYSjJZWEpwCmRXMHhKREFpQmdrcWhraUc5dzBCQ1FFV0ZXTnZiblJoWTNSQWJXRm1ZV0p5YVhGMVpTNW1jakNDQWlJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBSzM4OWZJS2ZMNUEyVll1aEFsRU4zc0RBRXE5cnlrbAoyMzF1NDlUM3BvQUxVa1doRFFLbzRrQUpyd1FaNElUSVl2RFhFTTRKaFhGT2FUS2NlS05lQndTWWN3cTlWMGNaCkpZVm9NMzBSb0FpOWtmS3pra1hXOEY3WS9PUW50dGJRd3JrMU52TDVJQ2txa3hFTEhwYVU0OE9uR2hTTDQ3SWMKMVF3cW96Qy9qNUFDRkVybUNQS2tYUGg0MmRPZmV3NEFGRnVhNDExdVRrMzkrQWFsOE1SMmJoODBFRUNHUUd4WgpaaTBoV01xQldQbUZkd3NSWnhvRDM0MEJVaUNqYk9MR05OazlSdTlQVXVNWFZGOTZjV2xicFR5Tll2NHVhM05BCnArdWZnc0V2T2p0MlJDd3ZtWWpTSlVRbjQ2ZEcxMzZvdUlMQ0JxYkJ3K243VHBLUWwyMkNSd3lVTkpwcjZoQ2MKazFBenFHMHczWXNlYW5pV2dpRDZRdEpHODdwV1I4SWlZaGViejgvRVNzZVpLRks1NHpaeXIyUTVLaTdMcStqVApiK0pNVVNRYkRWY3hzbEhuNElvMnpLbHBoSEN1bnFlZk1hM0ZqZlVJWVUzQkpkZW8xYStsSjUyWWdocExrRE1PCkJVM2FkYzhvR0ZwT25vWHZBWm10QnFVdFNDSmFnTllLbGpYa0ZEMFlyUTZjVW5UTlVuR3UxaWF1bUxUdmdUNmQKSXlhcW9RLzNDOE13b3A4MU0vQXZVbFpQZk8zdUNIMHlObFBRWCtGSjVOOU5ubVBnekVKcGs0REY1bXNLajU2SgpyYzIxVGRsS2xnanV6dVFMRVQ1QzZMNXNseTVPM0xlRnBjTE9FVVF5Um9zRzJocXhxTzMrTENrZ21WK1BNSTF2CjRPMnVUai9BeU54VEFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCUVE0VHE5YnQxdEtaa0VsNWs1OHVIOXkyUTYKY0RBZkJnTlZIU01FR0RBV2dCUVE0VHE5YnQxdEtaa0VsNWs1OHVIOXkyUTZjREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUEwR0NTcUdTSWIzRFFFQkRRVUFBNElDQVFBN3hqR2E5WSszQjRMdTJZTnhlZWRTTXVUQzQ4OVVrakJFClFSekhQVU5VQm1iSy9oeXpEWEdmNFVwS0ZqNnlvR3FLRzV2M05sQnhONFpRbCtJbU9HUWZmQnRBUWI5RkFxcU8KSlN5T2NEanpNWEtVZlFRd2NWRzJQdC9jakFTNGU1MCtxQ2pGM2RWVjgwemdOb1dONkVmVHcralFtZlh2QWxsSwozczI4QmpzNjIvbTd4MlVqb2RxTU12MHhaQ25VanI3bjZGK2R2NzNlZXNZUVFyckRldlVrUkIraW1Ib3ROUGJECmJhcDhIbHd2MnIvbnJaTUYzd0tOQW1iV2NsWG1UOUtRcVdLc0Y0Z2o2TFgySnF1cmg0QUo3M3VxZnpmK1hFd1EKOXBoMG5TUWdxUlp6STNXSGV4b3hUZVFGaWpxaFpFQlRKSWhQdUpEcEtBWnU0b3Y2TG5UODVMRzlsNG9DVzR1VAp2U0tUeFl6L1F6ZUpIeFRqcUZzQzRYNmVydlhSazRnWUlUNU14YVdJcnFUZHhWVHA4RGNKNmFISHU4dUZWSmNLClpDYzZDNDB4d1JrUGxzd2dJSjBaT0dzTjFkZXplUG1STG5PQ2ZLanF0Nml2c3E3VTZiNjFFUktMUDV6cnkrUDYKVnJQRVR5U2tpc2Y0TTRMU3BOTzBocFQ2cmx3QzExUFM2MW9QWHh0Z0I0TDE3Mm41OXpJYWovUkswL05SV0hNQwpYVWlkaFlnUjNrVEVXc1BlcmJHY0xObHJXc1FrVWNmVVNnOWwvZVRTNU9JdytRbjFOcWkva1piOFpZcTZCUzhzCjlIbjlUYnA3a05yWkdnb1lkcUpTb2JxOWw1OEtDN0RoTVYwa1I2OTY4UHFKWHBHSDdqSlF4eWtRWitROW82S3MKUXdkdFYrSEhKUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
